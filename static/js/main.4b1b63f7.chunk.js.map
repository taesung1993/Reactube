{"version":3,"sources":["routes/Home.js","components/Video.js","routes/Result.js","App.js","index.js"],"names":["Home","props","handleChange","event","setState","keyword","target","value","handleSubmit","preventDefault","state","history","push","pathname","search","className","to","onSubmit","this","type","placeholder","name","onChange","React","Component","Video","id","title","creator","publishedAt","thumbnail","href","src","alt","dotenv","config","YOUTBE_API","process","REACT_APP_YTB_API_URL","YOUTUBE_API_KEY","REACT_APP_YTB_API_KEY","Result","getVideos","a","axios","baseURL","params","q","key","part","maxResults","res","items","data","isLoading","videos","path","location","query","URLSearchParams","get","map","video","videoId","snippet","channelTitle","thumbnails","medium","url","App","exact","component","Date","getFullYear","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b1b63f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.scss\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keyword: null,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      keyword: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { keyword } = this.state;\r\n    this.props.history.push({\r\n      pathname: \"/result\",\r\n      search: `?keyword=${keyword}`,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header>\r\n          <Link to=\"/\">\r\n            <span>Reactube</span>\r\n          </Link>\r\n          <span>serch the video you want to see</span>\r\n        </header>\r\n        <main>\r\n          <div className=\"search-box\">\r\n            <h3>Search the the keyword.</h3>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter your keyword\"\r\n                name=\"keyword\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <button type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst VIDEO_LINK = \"https://www.youtube.com/watch?v=\";\r\n\r\nconst Video = ({ id, title, creator, publishedAt, thumbnail }) => {\r\n  return (\r\n    <section id={id}>\r\n      <a href={`${VIDEO_LINK}${id}`}>\r\n        <img src={thumbnail} alt=\"thumbnail\" />\r\n        <div className=\"info\">\r\n          <h3 className=\"title\">{title}</h3>\r\n          <span className=\"creator\">{creator}</span>\r\n          <span className=\"publishedAt\">{publishedAt}</span>\r\n        </div>\r\n      </a>\r\n    </section>\r\n  );\r\n};\r\n\r\nVideo.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  creator: PropTypes.string,\r\n  publishedAt: PropTypes.string,\r\n  thumbnail: PropTypes.string,\r\n};\r\n\r\nexport default Video;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\nimport Video from \"../components/Video\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Result.scss\";\r\n\r\ndotenv.config();\r\n\r\nconst YOUTBE_API = process.env.REACT_APP_YTB_API_URL;\r\nconst YOUTUBE_API_KEY = process.env.REACT_APP_YTB_API_KEY;\r\n\r\nclass Result extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const path = this.props.location.search;\r\n    const query = new URLSearchParams(path).get(\"keyword\");\r\n    this.state = {\r\n      isLoading: true,\r\n      keyword: query,\r\n      videos: [],\r\n    };\r\n  }\r\n\r\n  getVideos = async (keyword) => {\r\n    const res = await axios({\r\n      baseURL: `${YOUTBE_API}search`,\r\n      params: {\r\n        q: keyword,\r\n        key: YOUTUBE_API_KEY,\r\n        part: \"snippet\",\r\n        maxResults: 5,\r\n        type: \"video\",\r\n      },\r\n    });\r\n    const {\r\n      data: { items },\r\n    } = res;\r\n\r\n    this.setState({\r\n      isLoading: false,\r\n      videos: items,\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      keyword: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { keyword } = this.state;\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.props.history.push({\r\n      pathname: \"/result\",\r\n      search: `?keyword=${keyword}`,\r\n    });\r\n    this.getVideos(keyword);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { keyword } = this.state;\r\n    this.getVideos(keyword);\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, videos } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"result__header\">\r\n          <div className=\"header__column\">\r\n            <Link to=\"/\">\r\n              <span>Reactube</span>\r\n            </Link>\r\n          </div>\r\n          <div className=\"header__column\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"enter your keyword\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </form>\r\n          </div>\r\n          <div className=\"header__column\">\r\n            <span>serch the video you want to see</span>\r\n          </div>\r\n        </header>\r\n        <main>\r\n          {isLoading ? (\r\n            <div className=\"loading-box\">\r\n              <div className=\"loading\"></div>\r\n              <div className=\"text\">Loading</div>\r\n            </div>\r\n          ) : (\r\n            videos.map((video) => {\r\n              const {\r\n                id: { videoId },\r\n                snippet: {\r\n                  channelTitle: creator,\r\n                  publishedAt,\r\n                  title,\r\n                  thumbnails: {\r\n                    medium: { url: thumbnail },\r\n                  },\r\n                },\r\n              } = video;\r\n\r\n              return (\r\n                <Video\r\n                  key={videoId}\r\n                  id={videoId}\r\n                  title={title}\r\n                  creator={creator}\r\n                  publishedAt={publishedAt}\r\n                  thumbnail={thumbnail}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Result from \"./routes/Result\";\r\n\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Route exact path=\"/\" component={Home}></Route>\r\n      <Route path=\"/result\" component={Result}></Route>\r\n      <footer>\r\n        <span>&copy; {new Date().getFullYear()}</span>\r\n        <span>REACTUBE</span>\r\n      </footer>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"main\"));\r\n"],"sourceRoot":""}